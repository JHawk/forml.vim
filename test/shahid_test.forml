-- forml mode test

-- function names are highlighted
module testmod
  open blah.thing as bt

  [: 1,2,3 :] 'map (Î»x = x * 2)

  [1,2,3]

  some_fun x = do
    let y = 10

    z <- rand 100
    log "interpolated string `x + y + z`"

  foo x y = z

  foo(x, y) = z

  -- _ (underscore) can be part of the identifier
  foo x y_ = z

  -- TODO FIXME XXX NOTE should be highlighted

  -- inline is a keyword
  inline object? x y = do! `undefined`

  >>= x y = x >> y

  -- a bunch of reserved words
  [: if then else let when with and or do do! var lazy in is isnt where ]

  -- edit javascript using C-c C-j
  do! x   <- `1 + 4`
      y   <- `2 + 3`
      z   <- `// this is unnecessarily long to demonstrate the javascript editing in forml-mode

              function log(x, y) {
                return Math.log(x) / Math.log(Math.E);
              }`
      ans <- `x + y`
      return (10 == ans)

  foo: JS a -> JS b

  (>>): JS a -> JS b

  fib 0 = 0 | 1 = 1 | n = fib(n - 1) + fib(n - 2)

  bar x y z == x * y * z

  true == true
  false == false
